"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const lodash_1 = require("lodash");
const dapr_1 = require("@dapr/dapr");
const context_1 = require("./context");
const runtime_1 = require("./runtime");
/**
 * Creates and configures an Dapr server and returns an HTTP server
 * which will run it.
 * @param userFunction User's function.
 * @param context Context of user's function.
 * @return HTTP server.
 */
function default_1(userFunction, context) {
    // Initailize Dapr server
    const app = new dapr_1.DaprServer('127.0.0.1', context.port, process.env.DAPR_HOST);
    // Create wrapper for user function
    const wrapper = runtime_1.OpenFunctionRuntime.WrapUserFunction(userFunction, context);
    // Initialize the server with the user's function.
    // For server interfaces, refer to https://github.com/dapr/js-sdk/blob/master/src/interfaces/Server/
    // For each input in context, bind the user function according to the component type.
    (0, lodash_1.forEach)(context.inputs, component => {
        if (context_1.ContextUtils.IsBindingComponent(component)) {
            app.binding.receive(component.componentName, wrapper);
        }
        else if (context_1.ContextUtils.IsPubSubComponent(component)) {
            app.pubsub.subscribe(component.componentName, component.uri || '', wrapper);
        }
    });
    return app;
}
exports.default = default_1;
//# sourceMappingURL=async_server.js.map