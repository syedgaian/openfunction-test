import { PluginMap } from './openfunction/plugin';
import { OpenFunctionContext } from './openfunction/context';
import { HandlerFunction } from './functions';
import { SignatureType } from './types';
export declare const MIN_NODE_VERSION_ESMODULES = "13.2.0";
/**
 * Returns user's function from function file.
 * Returns null if function can't be retrieved.
 * @return User's function or null.
 */
export declare function getUserFunction(codeLocation: string, functionTarget: string, signatureType: SignatureType): Promise<{
    userFunction: HandlerFunction;
    signatureType: SignatureType;
} | null>;
/**
 * It loads all the plugins from the provided code location.
 * @param codeLocation - The path to the plugin source codes.
 * @return A named plugin map object or null.
 */
export declare function getFunctionPlugins(codeLocation: string): Promise<PluginMap | null>;
export declare function getBuiltinPlugins(context: OpenFunctionContext): Promise<PluginMap | null>;
//# sourceMappingURL=loader.d.ts.map