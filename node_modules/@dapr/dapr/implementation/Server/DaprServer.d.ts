import IServer from "../../interfaces/Server/IServer";
import IServerPubSub from "../../interfaces/Server/IServerPubSub";
import IServerBinding from "../../interfaces/Server/IServerBinding";
import IServerInvoker from "../../interfaces/Server/IServerInvoker";
import IServerActor from "../../interfaces/Server/IServerActor";
import CommunicationProtocolEnum from "../../enum/CommunicationProtocol.enum";
import { DaprClientOptions } from "../../types/DaprClientOptions";
import { DaprClient } from "../..";
export default class DaprServer {
    private readonly serverHost;
    private readonly serverPort;
    private readonly daprHost;
    private readonly daprPort;
    private readonly logger;
    readonly daprServer: IServer;
    readonly pubsub: IServerPubSub;
    readonly binding: IServerBinding;
    readonly invoker: IServerInvoker;
    readonly actor: IServerActor;
    readonly client: DaprClient;
    constructor(serverHost?: string, serverPort?: string, daprHost?: string, daprPort?: string, communicationProtocol?: CommunicationProtocolEnum, clientOptions?: DaprClientOptions);
    start(): Promise<void>;
    stop(): Promise<void>;
    getDaprClient(): IServer;
    getDaprHost(): string;
    getDaprPort(): string;
}
