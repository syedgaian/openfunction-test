"use strict";
/*
Copyright 2022 The Dapr Authors
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GRPCClientProxy = void 0;
const grpc = __importStar(require("@grpc/grpc-js"));
const Settings_util_1 = require("../../../utils/Settings.util");
class GRPCClientProxy {
    constructor(clsProxy, grpcClient, grpcClientOptions) {
        this.clsProxy = clsProxy;
        this.grpcClient = grpcClient;
        this.grpcClientOptions = grpcClientOptions !== null && grpcClientOptions !== void 0 ? grpcClientOptions : {};
    }
    generateInterceptors() {
        const interceptors = [];
        // Create an interceptor that adds 'dapr-app-id' to each call as metadata
        const interceptorDaprAppId = (options, nextCall) => {
            return new grpc.InterceptingCall(nextCall(options), {
                start: (metadata, listener, next) => {
                    metadata.add("dapr-app-id", `${Settings_util_1.Settings.getAppId()}`);
                    next(metadata, listener);
                },
            });
        };
        interceptors.push(interceptorDaprAppId);
        return interceptors;
    }
    build() {
        return __awaiter(this, void 0, void 0, function* () {
            // Ensures the sidecar is started
            yield this.grpcClient.start();
            // Call our method as defined in the proto
            if (!this.grpcClientOptions.interceptors) {
                this.grpcClientOptions.interceptors = [];
            }
            this.grpcClientOptions.interceptors = [...this.generateInterceptors(), ...this.grpcClientOptions.interceptors];
            const clientCustom = new this.clsProxy(`${this.grpcClient.getClientHost()}:${this.grpcClient.getClientPort()}`, this.grpcClient.getClientCredentials(), this.grpcClientOptions);
            return clientCustom;
        });
    }
}
exports.GRPCClientProxy = GRPCClientProxy;
