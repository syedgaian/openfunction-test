import * as grpc from "@grpc/grpc-js";
import { KeyValueType } from "../types/KeyValue.type";
import { ConfigurationType } from "../types/configuration/Configuration.type";
import { ConfigurationItem as ConfigurationItemProto } from "../proto/dapr/proto/common/v1/common_pb";
import { Map } from "google-protobuf";
/**
 * Converts a KeyValueType to a grpc.Metadata object.
 * @param metadata key value pair of metadata
 * @returns grpc.Metadata object
 */
export declare function createGRPCMetadata(metadata?: KeyValueType): grpc.Metadata;
/**
 * Converts a KeyValueType to a HTTP query parameters.
 * The query parameters are separated by "&", and the key value pair is separated by "=".
 * Each metadata key is prefixed with "metadata.".
 *
 * Example, if the metadata is { "key1": "value1", "key2": "value2" }, the query parameter will be:
 * "metadata.key1=value1&metadata.key2=value2"
 *
 * Note, the returned value does not contain the "?" prefix.
 *
 * @param metadata key value pair of metadata
 * @returns HTTP query parameter string
 */
export declare function createHTTPMetadataQueryParam(metadata?: KeyValueType): string;
/**
 * Converts a Map<string, common_pb.ConfigurationItemProto> to a ConfigurationType object.
 * @param Map<string, common_pb.ConfigurationItemProto>
 * @returns ConfigurationType object
 */
export declare function createConfigurationType(configDict: Map<string, ConfigurationItemProto>): ConfigurationType;
