/*!
 *
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
export interface Tag {
    readonly key: string;
    readonly overridable: boolean;
    val: string;
}
declare const _default: {
    coldStartKey: string;
    httpStatusCodeKey: string;
    httpStatusMsgKey: string;
    httpURLKey: string;
    httpMethodKey: string;
    dbTypeKey: string;
    dbInstanceKey: string;
    dbStatementKey: string;
    dbSqlParametersKey: string;
    dbMongoParametersKey: string;
    mqBrokerKey: string;
    mqTopicKey: string;
    mqQueueKey: string;
    coldStart(val?: boolean): Tag;
    httpStatusCode(val: string | number | undefined): Tag;
    httpStatusMsg(val: string | undefined): Tag;
    httpURL(val: string | undefined): Tag;
    httpMethod(val: string | undefined): Tag;
    dbType(val: string | undefined): Tag;
    dbInstance(val: string | undefined): Tag;
    dbStatement(val: string | undefined): Tag;
    dbSqlParameters(val: string | undefined): Tag;
    dbMongoParameters(val: string | undefined): Tag;
    mqBroker(val: string | undefined): Tag;
    mqTopic(val: string | undefined): Tag;
    mqQueue(val: string | undefined): Tag;
};
export default _default;
