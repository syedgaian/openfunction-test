// source: browser/BrowserPerf.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_Common_pb = require('../common/Common_pb.js');
goog.object.extend(proto, common_Common_pb);
goog.exportSymbol('proto.skywalking.v3.BrowserErrorLog', null, global);
goog.exportSymbol('proto.skywalking.v3.BrowserPerfData', null, global);
goog.exportSymbol('proto.skywalking.v3.ErrorCategory', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.skywalking.v3.BrowserPerfData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.skywalking.v3.BrowserPerfData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.skywalking.v3.BrowserPerfData.displayName = 'proto.skywalking.v3.BrowserPerfData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.skywalking.v3.BrowserErrorLog = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.skywalking.v3.BrowserErrorLog, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.skywalking.v3.BrowserErrorLog.displayName = 'proto.skywalking.v3.BrowserErrorLog';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.skywalking.v3.BrowserPerfData.prototype.toObject = function(opt_includeInstance) {
  return proto.skywalking.v3.BrowserPerfData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.skywalking.v3.BrowserPerfData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.skywalking.v3.BrowserPerfData.toObject = function(includeInstance, msg) {
  var f, obj = {
    service: jspb.Message.getFieldWithDefault(msg, 1, ""),
    serviceversion: jspb.Message.getFieldWithDefault(msg, 2, ""),
    time: jspb.Message.getFieldWithDefault(msg, 3, 0),
    pagepath: jspb.Message.getFieldWithDefault(msg, 4, ""),
    redirecttime: jspb.Message.getFieldWithDefault(msg, 5, 0),
    dnstime: jspb.Message.getFieldWithDefault(msg, 6, 0),
    ttfbtime: jspb.Message.getFieldWithDefault(msg, 7, 0),
    tcptime: jspb.Message.getFieldWithDefault(msg, 8, 0),
    transtime: jspb.Message.getFieldWithDefault(msg, 9, 0),
    domanalysistime: jspb.Message.getFieldWithDefault(msg, 10, 0),
    fpttime: jspb.Message.getFieldWithDefault(msg, 11, 0),
    domreadytime: jspb.Message.getFieldWithDefault(msg, 12, 0),
    loadpagetime: jspb.Message.getFieldWithDefault(msg, 13, 0),
    restime: jspb.Message.getFieldWithDefault(msg, 14, 0),
    ssltime: jspb.Message.getFieldWithDefault(msg, 15, 0),
    ttltime: jspb.Message.getFieldWithDefault(msg, 16, 0),
    firstpacktime: jspb.Message.getFieldWithDefault(msg, 17, 0),
    fmptime: jspb.Message.getFieldWithDefault(msg, 18, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.skywalking.v3.BrowserPerfData}
 */
proto.skywalking.v3.BrowserPerfData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.skywalking.v3.BrowserPerfData;
  return proto.skywalking.v3.BrowserPerfData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.skywalking.v3.BrowserPerfData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.skywalking.v3.BrowserPerfData}
 */
proto.skywalking.v3.BrowserPerfData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setService(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceversion(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTime(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPagepath(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRedirecttime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDnstime(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTtfbtime(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTcptime(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTranstime(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDomanalysistime(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFpttime(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDomreadytime(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLoadpagetime(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRestime(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSsltime(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTtltime(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFirstpacktime(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFmptime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.skywalking.v3.BrowserPerfData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.skywalking.v3.BrowserPerfData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.skywalking.v3.BrowserPerfData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.skywalking.v3.BrowserPerfData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getService();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getServiceversion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTime();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getPagepath();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRedirecttime();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getDnstime();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getTtfbtime();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getTcptime();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getTranstime();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getDomanalysistime();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getFpttime();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getDomreadytime();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getLoadpagetime();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getRestime();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getSsltime();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getTtltime();
  if (f !== 0) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = message.getFirstpacktime();
  if (f !== 0) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = message.getFmptime();
  if (f !== 0) {
    writer.writeInt32(
      18,
      f
    );
  }
};


/**
 * optional string service = 1;
 * @return {string}
 */
proto.skywalking.v3.BrowserPerfData.prototype.getService = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.skywalking.v3.BrowserPerfData} returns this
 */
proto.skywalking.v3.BrowserPerfData.prototype.setService = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string serviceVersion = 2;
 * @return {string}
 */
proto.skywalking.v3.BrowserPerfData.prototype.getServiceversion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.skywalking.v3.BrowserPerfData} returns this
 */
proto.skywalking.v3.BrowserPerfData.prototype.setServiceversion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 time = 3;
 * @return {number}
 */
proto.skywalking.v3.BrowserPerfData.prototype.getTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.skywalking.v3.BrowserPerfData} returns this
 */
proto.skywalking.v3.BrowserPerfData.prototype.setTime = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string pagePath = 4;
 * @return {string}
 */
proto.skywalking.v3.BrowserPerfData.prototype.getPagepath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.skywalking.v3.BrowserPerfData} returns this
 */
proto.skywalking.v3.BrowserPerfData.prototype.setPagepath = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 redirectTime = 5;
 * @return {number}
 */
proto.skywalking.v3.BrowserPerfData.prototype.getRedirecttime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.skywalking.v3.BrowserPerfData} returns this
 */
proto.skywalking.v3.BrowserPerfData.prototype.setRedirecttime = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 dnsTime = 6;
 * @return {number}
 */
proto.skywalking.v3.BrowserPerfData.prototype.getDnstime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.skywalking.v3.BrowserPerfData} returns this
 */
proto.skywalking.v3.BrowserPerfData.prototype.setDnstime = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 ttfbTime = 7;
 * @return {number}
 */
proto.skywalking.v3.BrowserPerfData.prototype.getTtfbtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.skywalking.v3.BrowserPerfData} returns this
 */
proto.skywalking.v3.BrowserPerfData.prototype.setTtfbtime = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 tcpTime = 8;
 * @return {number}
 */
proto.skywalking.v3.BrowserPerfData.prototype.getTcptime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.skywalking.v3.BrowserPerfData} returns this
 */
proto.skywalking.v3.BrowserPerfData.prototype.setTcptime = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 transTime = 9;
 * @return {number}
 */
proto.skywalking.v3.BrowserPerfData.prototype.getTranstime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.skywalking.v3.BrowserPerfData} returns this
 */
proto.skywalking.v3.BrowserPerfData.prototype.setTranstime = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 domAnalysisTime = 10;
 * @return {number}
 */
proto.skywalking.v3.BrowserPerfData.prototype.getDomanalysistime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.skywalking.v3.BrowserPerfData} returns this
 */
proto.skywalking.v3.BrowserPerfData.prototype.setDomanalysistime = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 fptTime = 11;
 * @return {number}
 */
proto.skywalking.v3.BrowserPerfData.prototype.getFpttime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.skywalking.v3.BrowserPerfData} returns this
 */
proto.skywalking.v3.BrowserPerfData.prototype.setFpttime = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 domReadyTime = 12;
 * @return {number}
 */
proto.skywalking.v3.BrowserPerfData.prototype.getDomreadytime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.skywalking.v3.BrowserPerfData} returns this
 */
proto.skywalking.v3.BrowserPerfData.prototype.setDomreadytime = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 loadPageTime = 13;
 * @return {number}
 */
proto.skywalking.v3.BrowserPerfData.prototype.getLoadpagetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.skywalking.v3.BrowserPerfData} returns this
 */
proto.skywalking.v3.BrowserPerfData.prototype.setLoadpagetime = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 resTime = 14;
 * @return {number}
 */
proto.skywalking.v3.BrowserPerfData.prototype.getRestime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.skywalking.v3.BrowserPerfData} returns this
 */
proto.skywalking.v3.BrowserPerfData.prototype.setRestime = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 sslTime = 15;
 * @return {number}
 */
proto.skywalking.v3.BrowserPerfData.prototype.getSsltime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.skywalking.v3.BrowserPerfData} returns this
 */
proto.skywalking.v3.BrowserPerfData.prototype.setSsltime = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional int32 ttlTime = 16;
 * @return {number}
 */
proto.skywalking.v3.BrowserPerfData.prototype.getTtltime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.skywalking.v3.BrowserPerfData} returns this
 */
proto.skywalking.v3.BrowserPerfData.prototype.setTtltime = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional int32 firstPackTime = 17;
 * @return {number}
 */
proto.skywalking.v3.BrowserPerfData.prototype.getFirstpacktime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.skywalking.v3.BrowserPerfData} returns this
 */
proto.skywalking.v3.BrowserPerfData.prototype.setFirstpacktime = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional int32 fmpTime = 18;
 * @return {number}
 */
proto.skywalking.v3.BrowserPerfData.prototype.getFmptime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.skywalking.v3.BrowserPerfData} returns this
 */
proto.skywalking.v3.BrowserPerfData.prototype.setFmptime = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.skywalking.v3.BrowserErrorLog.prototype.toObject = function(opt_includeInstance) {
  return proto.skywalking.v3.BrowserErrorLog.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.skywalking.v3.BrowserErrorLog} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.skywalking.v3.BrowserErrorLog.toObject = function(includeInstance, msg) {
  var f, obj = {
    uniqueid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    service: jspb.Message.getFieldWithDefault(msg, 2, ""),
    serviceversion: jspb.Message.getFieldWithDefault(msg, 3, ""),
    time: jspb.Message.getFieldWithDefault(msg, 4, 0),
    pagepath: jspb.Message.getFieldWithDefault(msg, 5, ""),
    category: jspb.Message.getFieldWithDefault(msg, 6, 0),
    grade: jspb.Message.getFieldWithDefault(msg, 7, ""),
    message: jspb.Message.getFieldWithDefault(msg, 8, ""),
    line: jspb.Message.getFieldWithDefault(msg, 9, 0),
    col: jspb.Message.getFieldWithDefault(msg, 10, 0),
    stack: jspb.Message.getFieldWithDefault(msg, 11, ""),
    errorurl: jspb.Message.getFieldWithDefault(msg, 12, ""),
    firstreportederror: jspb.Message.getBooleanFieldWithDefault(msg, 13, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.skywalking.v3.BrowserErrorLog}
 */
proto.skywalking.v3.BrowserErrorLog.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.skywalking.v3.BrowserErrorLog;
  return proto.skywalking.v3.BrowserErrorLog.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.skywalking.v3.BrowserErrorLog} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.skywalking.v3.BrowserErrorLog}
 */
proto.skywalking.v3.BrowserErrorLog.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUniqueid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setService(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceversion(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTime(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPagepath(value);
      break;
    case 6:
      var value = /** @type {!proto.skywalking.v3.ErrorCategory} */ (reader.readEnum());
      msg.setCategory(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setGrade(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLine(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCol(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setStack(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorurl(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFirstreportederror(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.skywalking.v3.BrowserErrorLog.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.skywalking.v3.BrowserErrorLog.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.skywalking.v3.BrowserErrorLog} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.skywalking.v3.BrowserErrorLog.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUniqueid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getService();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getServiceversion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTime();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getPagepath();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCategory();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getGrade();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getLine();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getCol();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getStack();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getErrorurl();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getFirstreportederror();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
};


/**
 * optional string uniqueId = 1;
 * @return {string}
 */
proto.skywalking.v3.BrowserErrorLog.prototype.getUniqueid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.skywalking.v3.BrowserErrorLog} returns this
 */
proto.skywalking.v3.BrowserErrorLog.prototype.setUniqueid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string service = 2;
 * @return {string}
 */
proto.skywalking.v3.BrowserErrorLog.prototype.getService = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.skywalking.v3.BrowserErrorLog} returns this
 */
proto.skywalking.v3.BrowserErrorLog.prototype.setService = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string serviceVersion = 3;
 * @return {string}
 */
proto.skywalking.v3.BrowserErrorLog.prototype.getServiceversion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.skywalking.v3.BrowserErrorLog} returns this
 */
proto.skywalking.v3.BrowserErrorLog.prototype.setServiceversion = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 time = 4;
 * @return {number}
 */
proto.skywalking.v3.BrowserErrorLog.prototype.getTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.skywalking.v3.BrowserErrorLog} returns this
 */
proto.skywalking.v3.BrowserErrorLog.prototype.setTime = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string pagePath = 5;
 * @return {string}
 */
proto.skywalking.v3.BrowserErrorLog.prototype.getPagepath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.skywalking.v3.BrowserErrorLog} returns this
 */
proto.skywalking.v3.BrowserErrorLog.prototype.setPagepath = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional ErrorCategory category = 6;
 * @return {!proto.skywalking.v3.ErrorCategory}
 */
proto.skywalking.v3.BrowserErrorLog.prototype.getCategory = function() {
  return /** @type {!proto.skywalking.v3.ErrorCategory} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.skywalking.v3.ErrorCategory} value
 * @return {!proto.skywalking.v3.BrowserErrorLog} returns this
 */
proto.skywalking.v3.BrowserErrorLog.prototype.setCategory = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional string grade = 7;
 * @return {string}
 */
proto.skywalking.v3.BrowserErrorLog.prototype.getGrade = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.skywalking.v3.BrowserErrorLog} returns this
 */
proto.skywalking.v3.BrowserErrorLog.prototype.setGrade = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string message = 8;
 * @return {string}
 */
proto.skywalking.v3.BrowserErrorLog.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.skywalking.v3.BrowserErrorLog} returns this
 */
proto.skywalking.v3.BrowserErrorLog.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int32 line = 9;
 * @return {number}
 */
proto.skywalking.v3.BrowserErrorLog.prototype.getLine = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.skywalking.v3.BrowserErrorLog} returns this
 */
proto.skywalking.v3.BrowserErrorLog.prototype.setLine = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 col = 10;
 * @return {number}
 */
proto.skywalking.v3.BrowserErrorLog.prototype.getCol = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.skywalking.v3.BrowserErrorLog} returns this
 */
proto.skywalking.v3.BrowserErrorLog.prototype.setCol = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string stack = 11;
 * @return {string}
 */
proto.skywalking.v3.BrowserErrorLog.prototype.getStack = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.skywalking.v3.BrowserErrorLog} returns this
 */
proto.skywalking.v3.BrowserErrorLog.prototype.setStack = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string errorUrl = 12;
 * @return {string}
 */
proto.skywalking.v3.BrowserErrorLog.prototype.getErrorurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.skywalking.v3.BrowserErrorLog} returns this
 */
proto.skywalking.v3.BrowserErrorLog.prototype.setErrorurl = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional bool firstReportedError = 13;
 * @return {boolean}
 */
proto.skywalking.v3.BrowserErrorLog.prototype.getFirstreportederror = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.skywalking.v3.BrowserErrorLog} returns this
 */
proto.skywalking.v3.BrowserErrorLog.prototype.setFirstreportederror = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * @enum {number}
 */
proto.skywalking.v3.ErrorCategory = {
  AJAX: 0,
  RESOURCE: 1,
  VUE: 2,
  PROMISE: 3,
  JS: 4,
  UNKNOWN: 5
};

goog.object.extend(exports, proto.skywalking.v3);
