// package: skywalking.v3
// file: management/Management.proto

/* tslint:disable */
/* eslint-disable */

import * as jspb from "google-protobuf";
import * as common_Common_pb from "../common/Common_pb";

export class InstanceProperties extends jspb.Message { 
    getService(): string;
    setService(value: string): InstanceProperties;
    getServiceinstance(): string;
    setServiceinstance(value: string): InstanceProperties;
    clearPropertiesList(): void;
    getPropertiesList(): Array<common_Common_pb.KeyStringValuePair>;
    setPropertiesList(value: Array<common_Common_pb.KeyStringValuePair>): InstanceProperties;
    addProperties(value?: common_Common_pb.KeyStringValuePair, index?: number): common_Common_pb.KeyStringValuePair;
    getLayer(): string;
    setLayer(value: string): InstanceProperties;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): InstanceProperties.AsObject;
    static toObject(includeInstance: boolean, msg: InstanceProperties): InstanceProperties.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: InstanceProperties, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): InstanceProperties;
    static deserializeBinaryFromReader(message: InstanceProperties, reader: jspb.BinaryReader): InstanceProperties;
}

export namespace InstanceProperties {
    export type AsObject = {
        service: string,
        serviceinstance: string,
        propertiesList: Array<common_Common_pb.KeyStringValuePair.AsObject>,
        layer: string,
    }
}

export class InstancePingPkg extends jspb.Message { 
    getService(): string;
    setService(value: string): InstancePingPkg;
    getServiceinstance(): string;
    setServiceinstance(value: string): InstancePingPkg;
    getLayer(): string;
    setLayer(value: string): InstancePingPkg;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): InstancePingPkg.AsObject;
    static toObject(includeInstance: boolean, msg: InstancePingPkg): InstancePingPkg.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: InstancePingPkg, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): InstancePingPkg;
    static deserializeBinaryFromReader(message: InstancePingPkg, reader: jspb.BinaryReader): InstancePingPkg;
}

export namespace InstancePingPkg {
    export type AsObject = {
        service: string,
        serviceinstance: string,
        layer: string,
    }
}
