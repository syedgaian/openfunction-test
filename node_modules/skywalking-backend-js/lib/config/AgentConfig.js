"use strict";
/*!
 *
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", { value: true });
exports.ignoreHttpMethodCheck = exports.finalizeConfig = void 0;
var tslib_1 = require("tslib");
var os = tslib_1.__importStar(require("os"));
function finalizeConfig(config) {
    var escapeRegExp = function (s) { return s.replace(/([.*+?^=!:${}()|\[\]\/\\])/g, '\\$1'); };
    config.reDisablePlugins = RegExp("^(?:" + config
        .disablePlugins.split(',')
        .map(function (s) { return escapeRegExp(s.trim()); })
        .join('|') + ")$", 'i');
    var ignoreSuffix = "^.+(?:" + config
        .ignoreSuffix.split(',')
        .map(function (s) { return escapeRegExp(s.trim()); })
        .join('|') + ")$";
    var ignorePath = '^(?:' +
        config
            .traceIgnorePath.split(',')
            .map(function (s0) {
            return s0
                .trim()
                .split('/**/')
                .map(function (s1) {
                return s1
                    .trim()
                    .split('**')
                    .map(function (s2) {
                    return s2
                        .split('*')
                        .map(function (s3) { return s3.split('?').map(escapeRegExp).join('[^/]'); })
                        .join('[^/]*');
                })
                    .join('(?:(?:[^/]+/)*[^/]+)?');
            })
                .join('/(?:[^/]*/)*');
        })
            .join('|') +
        ')$'; // replaces ","
    config.reIgnoreOperation = RegExp(ignoreSuffix + "|" + ignorePath);
    config.reHttpIgnoreMethod = RegExp("^(?:" + config
        .httpIgnoreMethod.split(',')
        .map(function (s) { return s.trim(); })
        .join('|') + ")$", 'i');
}
exports.finalizeConfig = finalizeConfig;
var _config = {
    serviceName: process.env.SW_AGENT_NAME || 'your-nodejs-service',
    serviceInstance: process.env.SW_AGENT_INSTANCE ||
        (function () {
            return os.hostname();
        })(),
    collectorAddress: process.env.SW_AGENT_COLLECTOR_BACKEND_SERVICES || '127.0.0.1:11800',
    secure: ((_a = process.env.SW_AGENT_SECURE) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === 'true',
    authorization: process.env.SW_AGENT_AUTHENTICATION,
    maxBufferSize: Number.isSafeInteger(process.env.SW_AGENT_MAX_BUFFER_SIZE)
        ? Number.parseInt(process.env.SW_AGENT_MAX_BUFFER_SIZE, 10)
        : 1000,
    coldEndpoint: ((_b = process.env.SW_COLD_ENDPOINT) === null || _b === void 0 ? void 0 : _b.toLowerCase()) === 'true',
    disablePlugins: process.env.SW_AGENT_DISABLE_PLUGINS || '',
    ignoreSuffix: (_c = process.env.SW_IGNORE_SUFFIX) !== null && _c !== void 0 ? _c : '.jpg,.jpeg,.js,.css,.png,.bmp,.gif,.ico,.mp3,.mp4,.html,.svg',
    traceIgnorePath: process.env.SW_TRACE_IGNORE_PATH || '',
    httpIgnoreMethod: process.env.SW_HTTP_IGNORE_METHOD || '',
    sqlTraceParameters: (process.env.SW_SQL_TRACE_PARAMETERS || '').toLowerCase() === 'true',
    sqlParametersMaxLength: Math.trunc(Math.max(0, Number(process.env.SW_SQL_PARAMETERS_MAX_LENGTH))) || 512,
    mongoTraceParameters: (process.env.SW_MONGO_TRACE_PARAMETERS || '').toLowerCase() === 'true',
    mongoParametersMaxLength: Math.trunc(Math.max(0, Number(process.env.SW_MONGO_PARAMETERS_MAX_LENGTH))) || 512,
    awsLambdaFlush: (process.env.SW_AWSLAMBDA_FLUSH || 'true').toLowerCase() === 'true',
    reDisablePlugins: RegExp(''),
    reIgnoreOperation: RegExp(''),
    reHttpIgnoreMethod: RegExp(''),
};
exports.default = _config;
function ignoreHttpMethodCheck(method) {
    return Boolean(method.match(_config.reHttpIgnoreMethod));
}
exports.ignoreHttpMethodCheck = ignoreHttpMethodCheck;
//# sourceMappingURL=AgentConfig.js.map