"use strict";
/*!
 *
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
var SegmentRef = /** @class */ (function () {
    function SegmentRef(refType, traceId, segmentId, spanId, service, serviceInstance, endpoint, clientAddress) {
        if (refType === void 0) { refType = 'CrossProcess'; }
        this.refType = refType;
        this.traceId = traceId;
        this.segmentId = segmentId;
        this.spanId = spanId;
        this.service = service;
        this.serviceInstance = serviceInstance;
        this.endpoint = endpoint;
        this.clientAddress = clientAddress;
        this.traceId = traceId;
        this.segmentId = segmentId;
        this.spanId = spanId;
        this.service = service;
        this.serviceInstance = serviceInstance;
        this.endpoint = endpoint;
        this.clientAddress = clientAddress;
    }
    SegmentRef.fromCarrier = function (carrier) {
        return new SegmentRef('CrossProcess', carrier.traceId, carrier.segmentId, carrier.spanId, carrier.service, carrier.serviceInstance, carrier.endpoint, carrier.clientAddress);
    };
    return SegmentRef;
}());
exports.default = SegmentRef;
//# sourceMappingURL=SegmentRef.js.map